Notes from studying

Git Cheatsheet


This is a reference list of the most commonly used Git commands. (You might consider bookmarking this handy page.) Try to familiarize yourself with the commands so that you can eventually remember them all:

    Commands related to a remote repository:
        git clone git@github.com:USER-NAME/REPOSITORY-NAME.git
        git push or git push origin main (Both accomplish the same goal in this context)
    Commands related to the workflow:
        git add .
        git commit -m "A message describing what you have done to make this snapshot different"
    Commands related to checking status or log history
        git status
        git log

The basic Git syntax is program | action | destination.

For example,

    git add . is read as git | add | ., where the period represents everything in the current directory;
    git commit -m "message" is read as git | commit -m | "message"; and
    git status is read as git | status | (no destination).


HTML Tips and tricks

Commenting -->  <!-- I am a comment -->
Faster way to comment -->  Ctrl + /

Opening links in a new tab
The method shown above opens links in the same tab as the webpage containing them. This is the default behaviour of most browsers and it can be changed relatively easily. All we need is another attribute: the target attribute.

While href specifies the destination link, target specifies where the linked resource will be opened. If it is not present, then, by default, it will take on the _self value which opens the link in the current tab. To open the link in a new tab or window (depends on browser settings) you can set it to _blank as follows:

Example Code:
<a href="https://www.theodinproject.com/about" target="_blank" rel="noopener noreferrer">About The Odin Project</a>

You may have noticed that we snuck in the rel attribute above. This attribute is used to describe the relation between the current page and the linked document.

The noopener value prevents the opened link from gaining access to the webpage from which it was opened.

The noreferrer value prevents the opened link from knowing which webpage or resource has a link (or ‘reference’) to it. The noreferrer value also includes the noopener behaviour and thus can be used by itself as well.

Why do we need this added behaviour for opening links in new tabs? Security reasons. The prevention of access that is caused by noopener prevents phishing attacks where the opened link may change the original webpage to a different one to trick users. This is referred to as tabnabbing. Adding the noreferrer value can be done if you wish to not let the opened link know that your webpage links to it.

Note that you may be fine if you forget to add rel="noopener noreferrer" since more recent versions of browsers provide security if only target="_blank" is present. Nevertheless, in line with good coding practices and to err on the side of caution, it is recommended to always pair a target="_blank" with a rel="noopener noreferrer".


Absolute and relative links

Absolute links --> Links to pages on other websites on the internet (usual links that you would use to link to other sites)

Relative links --> Links to pages located on our own website

